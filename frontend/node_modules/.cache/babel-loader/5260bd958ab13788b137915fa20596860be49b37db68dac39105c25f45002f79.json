{"ast":null,"code":"var _jsxFileName = \"/Users/connieshi/Documents/YoVenture_WebApp/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../UserContext'; // 引入 useUser\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  setIsLoggedIn,\n  setUserSessions\n}) {\n  _s();\n  // Destructure the prop correctly\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser(); // 获取 setUser 函数\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        setIsLoggedIn(true); // Set the login state to true upon successful login\n        setUser({\n          userId: email\n        }); // 存储用户信息\n        setUser({\n          password: password\n        }); // 存储用户信息\n        console.log('password', password);\n        const sessionResponse = await fetch('/yv-get-user-sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"user_id\": email,\n            \"password\": hashedPassword\n          })\n        });\n        if (sessionResponse.data.status === 'success') {\n          setUserSessions(sessionResponse.data.sessions);\n        } else {\n          alert('Failed to get user sessions');\n        }\n        navigate('/');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Server error. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"GNPuxdeGUMMS0JABn0mHPsb/0QM=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useUser","jsxDEV","_jsxDEV","LoginPage","setIsLoggedIn","setUserSessions","_s","email","setEmail","password","setPassword","error","setError","navigate","setUser","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","userId","console","log","sessionResponse","hashedPassword","data","status","sessions","alert","errorData","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/connieshi/Documents/YoVenture_WebApp/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../UserContext'; // 引入 useUser\nimport './LoginPage.css';\n\nfunction LoginPage({ setIsLoggedIn, setUserSessions }) { // Destructure the prop correctly\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { setUser } = useUser(); // 获取 setUser 函数\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      if (response.ok) {\n        setIsLoggedIn(true); // Set the login state to true upon successful login\n        setUser({ userId: email }); // 存储用户信息\n        setUser({ password: password }); // 存储用户信息\n        console.log('password',password)\n        const sessionResponse = await fetch('/yv-get-user-sessions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"user_id\": email,\n            \"password\": hashedPassword})\n        });\n        if (sessionResponse.data.status === 'success') {\n          setUserSessions(sessionResponse.data.sessions);\n        } else {\n          alert('Failed to get user sessions');\n        }\n        navigate('/');\n\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Server error. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <h2>Login</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n      <div>\n        <label>Email:</label>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      </div>\n      <div>\n        <label>Password:</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </div>\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}